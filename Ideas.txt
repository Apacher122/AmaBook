Ecommerce

 //DESCRIPTION
 Our project models the database for an online store, including its set of products
 and its set of users, and allows a user to perform basic tasks like browse by category
 and “buy” items.

 An entity set contains the list of products, identified by a product number. Each product
 is assigned at least one clothing type (shirt, shoes, pants…) from the “clothing type” entity
 set and belongs to at most one seasonal collection. Each product is associated to at least one
 photo of it, and some photos can contain multiple products (i.e., a model is wearing a shirt
 and a skirt from the store). A relationship set also exists connecting the set of products to
 itself, indicating which products are similar and could be listed as suggested products. 
 Each user, identified by their email address, can add products to their shopping list and can
 have orders associated with their account, which in turn includes products from the store.
 
 We will do the web front-end option.
 
 //"DATA PLAN"
 Mock data or photos, names, prices from an existing online store, depending on the scale of
 the database
 
 //USER INTERFACE
 The user can peruse items by looking at clothing types or by collection. Each item is linked
 to several other items that are similar to it. Given an account, the user can add items to
 their shopping cart (including multiple of the same item), “buy” them, and then check the
 status of their orders.
 
  
YouFace, FaceTube, YouBook, FaceYou:
  //DESCRIPTION
  This application will follow the format of a typical social media website.
  The only difference between this application and, say, facebook would be that
  this application is more media-focused. The database will contain users, posts, 
  messages, media, and comments - all of which should uniquely be identified to 
  the user of origin. All entities, besides the user, will contain a date field 
  that displays time and date of submissions. The user will have fields that 
  contain identity, passwords, contact information, and the ability to disclose 
  gender and/or age. The media allowed for submission
  
  The relationships will include users "connecting" to each other, being able to see
  posts depending on "connection" status (essentially the same as adding a friend on fb), 
  sending messages to other users, and submitting posts.
  The challenging part to this task would be how to handle friends lists and their ability
  to see posts depending on friend status.
  
  For this project, we will follow the front-end web-design option.
  
  //DATA-PLAN
  Data will be mocked up, user photos, videos, and music will simply just be arbitrary files
  that represent jpg, mp4, or mp3 formats.
  
  
  //USER-INTERACTION PLAN
  The users will be allowed to add friends and see their posts, be able to message anyone
  on the platform, share media, and receive recommendations for media. The platform is
  designed so that all media is shared publicly, unless otherwise specified (i.e. the user
  only wants to share among friends). In this way, the platform is like a hybrid between
  facebook and youtube in that users can easily interact and connect with friends, while
  focusing on creating and sharing content. There will be an additional database that will
  contain recommendations for media shared by users that will allow users of similar tastes
  to connect more easily.
  
